# {{ ansible_managed }}

[DEFAULT]
bantime   = {{ fail2ban_config_bantime }}
destemail = {{ fail2ban_config_destemail | default('root')}}
banaction = {{ fail2ban_config_banaction }}
action    = {{ fail2ban_config_jailaction }}
maxretry  = {{ fail2ban_config_maxretry }}

ignoreip = {{ fail2ban_config_ignoreip | join(" ") }}

# JAILS
[ssh]
enabled   = {{ fail2ban_config_jail_ssh_enabled }}
port      = ssh
filter    = sshd
logpath   = {{ fail2ban_authlog }}
maxretry  = {{ fail2ban_config_maxretry }}
action    = {{ fail2ban_config_jailaction }}
{% if fail2ban_badips_action and 'ssh' in firewall_badips_jails %}
             badips[category="ssh", key="{{ badips_key}}"]
{% endif %}

[pam-generic]
enabled   = {{ fail2ban_config_jail_pamgeneric_enabled }}
banaction = {{ fail2ban_config_banaction }}

[ssh-ddos]
enabled   = {{ fail2ban_config_jail_sshddos_enabled }}
port      = ssh
filter    = sshd-ddos
logpath   = {{ fail2ban_authlog }}
action    = {{ fail2ban_config_jailaction }}
{% if fail2ban_badips_action and 'sshddos' in firewall_badips_jails %}
             badips[category="sshddos", key="{{ badips_key}}"]
{% endif %}

[ssh-route]
enabled = {{ fail2ban_config_jail_sshroute_enabled }}
filter = sshd
action = route
logpath = {{ fail2ban_authlog }}
maxretry = 6
action    = route
{% if fail2ban_badips_action and 'sshroute' in firewall_badips_jails %}
             badips[category="ssh", key="{{ badips_key}}"]
{% endif %}


[webmin]
enabled   = {{ fail2ban_config_jail_webmin_enabled }}
port      = 10000,20000
filter    = webmin-auth
banaction = {{ fail2ban_config_banaction }}
logpath   = {{ fail2ban_authlog }}
action    = {{ fail2ban_config_jailaction }}
{% if fail2ban_badips_action and 'webmin' in firewall_badips_jails %}
             badips[category="webmin", key="{{ badips_key}}"]
{% endif %}

[apache]
enabled   = {{ fail2ban_config_jail_apache_enabled }}
port     = http,https
filter   = apache-auth
logpath  = /var/log/{{ apache_daemon }}*/*error.log
maxretry = 6
action    = {{ fail2ban_config_jailaction }}
{% if fail2ban_badips_action and 'apache' in firewall_badips_jails %}
             badips[category="apache", key="{{ badips_key}}"]
{% endif %}

[apache-noscript]
enabled   = {{ fail2ban_config_jail_apache_enabled }}
port      = http,https
banaction = {{ fail2ban_config_banaction }}
action    = {{ fail2ban_config_jailaction }}
{% if fail2ban_badips_action and 'apache' in firewall_badips_jails %}
             badips[category="apache", key="{{ badips_key}}"]
{% endif %}
logpath  = /var/log/{{ apache_daemon }}*/*error.log

[apache-overflows]
enabled   = {{ fail2ban_config_jail_apache_enabled }}
logpath  = /var/log/{{ apache_daemon }}*/*error.log
action    = {{ fail2ban_config_jailaction }}
{% if fail2ban_badips_action and 'apache' in firewall_badips_jails %}
             badips[category="apache", key="{{ badips_key}}"]
{% endif %}

[apache-modsecurity]
enabled  = {{ fail2ban_config_jail_modsec_enabled }}
filter   = apache-modsecurity
port     = http,https
logpath  = /var/log/{{ apache_daemon }}*/*error.log
maxretry = 2
action    = {{ fail2ban_config_jailaction }}
{% if fail2ban_badips_action and 'modsec' in firewall_badips_jails %}
             badips[category="modsecurity", key="{{ badips_key}}"]
{% endif %}

[apache-badbots]
enabled   = {{ fail2ban_config_jail_apache_enabled }}
port      = http,https
filter    = apache-badbots
banaction = {{ fail2ban_config_banaction }}
action    = {{ fail2ban_config_jailaction }}
{% if fail2ban_badips_action and 'apache' in firewall_badips_jails %}
             badips[category="badbots", key="{{ badips_key}}"]
{% endif %}
logpath   = /var/log/{{ apache_daemon }}*/*access.log
maxretry  = 1

[apache-nohome]
enabled   = {{ fail2ban_config_jail_apache_enabled }}
port      = http,https
filter    = apache-nohome
banaction = {{ fail2ban_config_banaction }}
action    = {{ fail2ban_config_jailaction }}
{% if fail2ban_badips_action and 'apache' in firewall_badips_jails %}
             badips[category="apache", key="{{ badips_key}}"]
{% endif %}
logpath   = /var/log/{{ apache_daemon }}*/*access.log
maxretry  = 1

[php-url-fopen]
enabled   = {{ fail2ban_config_jail_php_enabled }}
port      = http,https
filter    = php-url-fopen
logpath   = /var/log/{{ apache_daemon }}*/*access.log
maxretry  = 1
action    = {{ fail2ban_config_jailaction }}
{% if fail2ban_badips_action and 'php' in firewall_badips_jails %}
             badips[category="php", key="{{ badips_key}}"]
{% endif %}

[exim]
enabled  = {{ fail2ban_config_jail_exim_enabled }}
filter   = exim
port     = smtp,ssmtp
logpath  = /var/log/exim*/rejectlog
maxretry = 1
action    = {{ fail2ban_config_jailaction }}
{% if fail2ban_badips_action and 'exim' in firewall_badips_jails %}
             badips[category="mail", key="{{ badips_key}}"]
{% endif %}

[apache-w00tw00t]
enabled   = {{ fail2ban_config_jail_apache_enabled }}
port      = http,https
filter    = apache-w00tw00t
banaction = {{ fail2ban_config_banaction }}
action    = {{ fail2ban_config_jailaction }}
{% if fail2ban_badips_action and 'apache' in firewall_badips_jails %}
             badips[category="apache-w00tw00t", key="{{ badips_key}}"]
{% endif %}
logpath   = /var/log/{{ apache_daemon }}*/*error.log
maxretry  = 1

[apache-myadmin]
enabled   = {{ fail2ban_config_jail_apache_enabled }}
port      = http,https
filter    = apache-myadmin
banaction = {{ fail2ban_config_banaction }}
action    = {{ fail2ban_config_jailaction }}
{% if fail2ban_badips_action and 'apache' in firewall_badips_jails %}
             badips[category="apache", key="{{ badips_key}}"]
{% endif %}
logpath   = /var/log/{{ apache_daemon }}*/*error.log
maxretry  = 2

[proftpd]
enabled   = {{ fail2ban_config_jail_ftp_enabled }}
port      = ftp,ftp-data,ftps,ftps-data
filter    = proftpd
logpath   = /var/log/proftpd/proftpd.log
action    = {{ fail2ban_config_jailaction }}
{% if fail2ban_badips_action and 'ftp' in firewall_badips_jails %}
             badips[category="ftp", key="{{ badips_key}}"]
{% endif %}

# Jail for more extended banning of persistent abusers
# !!! WARNING !!!
#   Make sure that your loglevel specified in fail2ban.conf/.local
#   is not at DEBUG level -- which might then cause fail2ban to fall into
#   an infinite loop constantly feeding itself with non-informative lines
[recidive]

enabled  = {{ fail2ban_config_jail_recidive_enabled }}
filter   = recidive
logpath  = /var/log/fail2ban.log
action   = iptables-allports[name=recidive]
           sendmail-whois-lines[name=recidive, logpath=/var/log/fail2ban.log]
{% if fail2ban_badips_action %}
           badips[category="ssh", key="{{ badips_key}}"]
{% endif %}
bantime  = 604800  ; 1 week
findtime = 86400   ; 1 day
maxretry = 5

#
# Web Applications
#
#

[drupal-auth]
# requires syslog
enabled  = {{ fail2ban_config_jail_drupalauth_enabled }}
filter = drupal-auth
port     = http,https
logpath  = {{ fail2ban_daemonlog }}
action    = {{ fail2ban_config_jailaction }}
{% if fail2ban_badips_action and 'drupalauth' in firewall_badips_jails %}
             badips[category="drupal", key="{{ badips_key}}"]
{% endif %}


[monit]
#Ban clients brute-forcing the monit gui login
enabled  = {{ fail2ban_config_jail_monit_enabled }}
filter   = monit
port = {{ monit_webinterface_port }}
logpath  = /var/log/monit.log
action    = {{ fail2ban_config_jailaction }}
{% if fail2ban_badips_action and 'monit' in firewall_badips_jails%}
             badips[category="monit", key="{{ badips_key}}"]
{% endif %}


