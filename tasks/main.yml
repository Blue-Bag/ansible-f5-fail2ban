---

# Include variables and define needed variables.
- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: install fail2ban for Debian
  apt:
    name: 'fail2ban'
    state: "{{ fail2ban_pkg_state }}"
  when: ansible_os_family == 'Debian'
  become: true
  tags: [fail2ban]

- name: install fail2ban for RedHat
  yum: name=fail2ban state={{ fail2ban_pkg_state }}
  when: ansible_os_family == 'RedHat'
  become: true
  tags: [fail2ban]

  # check for fail2ban version

# - name: update configuration file - /etc/fail2ban/fail2ban.conf
#   template:
#     src: fail2ban.conf.j2
#     dest: /etc/fail2ban/fail2ban.conf
#     owner: root
#     group: root
#     mode: 0644
#   become: true
#   notify: restart fail2ban
#   tags: [configuration, fail2ban, fail2ban-configuration]


- name: update configuration file - /etc/fail2ban/fail2ban.conf
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  become: true
  with_items:
    - {
      src: 'fail2ban.conf.j2',
      dest: '/etc/fail2ban/fail2ban.conf'
    }
    - {
      src: 'fail2ban-iptables-multiport.local.j2',
      dest: '/etc/fail2ban/action.d/iptables-multiport.local'
    }
    - {
      src: 'fail2ban-iptables-allports.local.j2',
      dest: '/etc/fail2ban/action.d/iptables-allports.local'
    }
    - {
      src: 'fail2ban-iptables-ipset-proto6-multiport.local.j2',
      dest: '/etc/fail2ban/action.d/iptables-ipset-proto6.local'
    }
    - {
      src: 'fail2ban-iptables-ipset-proto6-allports.local.j2',
      dest: '/etc/fail2ban/action.d/iptables-ipset-proto6-allports.local'
    }
  notify: restart fail2ban
  tags: [configuration, fail2ban, fail2ban-configuration]

# determine apache version
- import_tasks: fail2ban_filters.yml

- name: Fail2ban | Add fail2ban jails
  template: src=jail.local.j2 dest=/etc/fail2ban/jail.local backup=yes mode=0644
  become: true
  tags: [fail2ban]
  notify:
    - restart fail2ban

- name: Fail2ban | Ensure fail2Ban restarts after system restart
  lineinfile:
    dest: /etc/default/fail2ban
    regexp: 'FAIL2BAN_OPTS='
    line: 'FAIL2BAN_OPTS="-x"'
    state: present
  become: true
  when: ansible_os_family == 'Debian'
  tags: [fail2ban]
  notify:
    - restart fail2ban

# check for the presence of  logs for the jails
- import_tasks: touch_logs.yml


# - name: start/stop fail2ban service
#   service:
#     name: fail2ban
#     state: "{{ fail2ban_service_state }}"
#     enabled: "{{ fail2ban_service_enabled }}"
#   become: true
#   tags: service
#   ignore_errors: true

- block:
    # - name: restart the service
    #   service: name=fail2ban state=reloaded

    - name: reload service fail2ban
      systemd:
        name: fail2ban
        state: reloaded
      ignore_errors: true
    - name: get the output for systemd
      command: "systemctl status fail2ban.service"
      register: sysdoutput

    - name: get the journal output
      command: "journalctl -xe"
      register: journoutput

    - name: display output
      debug:
        msg:
          - "{{ sysdoutput.stdout }}"
          - "{{ journoutput.stdout }}"
  when:
    - fail2ban_debug | bool
#   - ansible_service_mgr == 'systemd'
